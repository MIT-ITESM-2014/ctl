var lang = {};
$.extend(lang, {
	init: function(){
		this.fmx.parent = this.views.parent = this;
	},
	format: {
		number: {
			billion: '<%= t 'app.format.number.billion' %>',
			million: '<%= t 'app.format.number.million' %>',
			thousand: '<%= t 'app.format.number.thousand' %>'
		}
	},
	messages: {
		error: '<%= t 'app.messages.error' %>'
	},
	views: {
		parent: null,
		home: {
			labels: {
				not_found: '<%= t 'app.views.home.labels.not_found' %>'
			},
			actions: {
				go: '<%= t 'app.views.home.actions.go' %>'
			}
		},
		km: {
			header: {
				search: {
					labels: {
						search: '<%= t 'app.views.km.header.search.labels.search' %>'
					}
				},
				filters: {
					labels: {
						country: '<%= t 'app.views.km.header.filters.labels.country' %>',
						city: '<%= t 'app.views.km.header.filters.labels.city' %>',
						km2: '<%= t 'app.views.km.header.filters.labels.km2' %>',
						style: '<%= t 'app.views.km.header.filters.labels.style' %>'
					}
				}
			},
			map: {
				styles: {
					_default: '<%= t 'app.views.km.map.styles._default' %>',
					dark: '<%= t 'app.views.km.map.styles.dark' %>',
					classic: '<%= t 'app.views.km.map.styles.classic' %>'
				}
			},
			elements: {
				shops: {
					title: '<%= t 'app.views.km.elements.shops.title' %>',
					units: '<%= t 'app.views.km.elements.shops.units' %>',
					fields: {
						loading_unloading: '<%= t 'app.views.km.elements.shops.fields.loading_unloading' %>',
						deliveries_count: '<%= t 'app.views.km.elements.shops.fields.deliveries_count' %>'
					}
				},
				loading: {
					title: '<%= t 'app.views.km.elements.loading.title' %>',
					units: '<%= t 'app.views.km.elements.loading.units' %>',
					second_units: '<%= t 'app.views.km.elements.loading.second_units' %>',
					separator: '<%= t 'app.views.km.elements.loading.separator' %>',
					chart: {
						category: '<%= t 'app.views.km.elements.loading.chart.category' %>',
						public_meter_length: '<%= t 'app.views.km.elements.loading.chart.public_meter_length' %>',
						dedicated_meter_length: '<%= t 'app.views.km.elements.loading.chart.dedicated_meter_length' %>',
						y_label: '<%= t 'app.views.km.elements.loading.chart.y_label' %>'
					},
					fields: {
						meters: '<%= t 'app.views.km.elements.loading.fields.meters' %>'
					}
				},
				deliveries: {
					title: '<%= t 'app.views.km.elements.deliveries.title' %>',
					units: '<%= t 'app.views.km.elements.deliveries.units' %>',
					chart: {
						y_label: '<%= t 'app.views.km.elements.deliveries.chart.y_label' %>'
					},
					fields: {
						vehicle_type: '<%= t 'app.views.km.elements.deliveries.fields.vehicle_type' %>',
          				delivering_company: '<%= t 'app.views.km.elements.deliveries.fields.delivering_company' %>',
          				duration: '<%= t 'app.views.km.elements.deliveries.fields.duration' %>',
						mins: '<%= t 'app.views.km.elements.deliveries.fields.mins' %>'
					}
				},
				traffic_counts: {
					title: '<%= t 'app.views.km.elements.traffic_counts.title' %>',
					units: '<%= t 'app.views.km.elements.traffic_counts.units' %>',
					chart: {
						y_label: '<%= t 'app.views.km.elements.traffic_counts.chart.y_label' %>',
						labels: {
							morning: '<%= t 'app.views.km.elements.traffic_counts.chart.labels.morning' %>',
							evening: '<%= t 'app.views.km.elements.traffic_counts.chart.labels.evening' %>',
							noon: '<%= t 'app.views.km.elements.traffic_counts.chart.labels.noon' %>'
						},
						categories: {
							cars: '<%= t 'app.views.km.elements.traffic_counts.chart.categories.cars' %>',
							taxis: '<%= t 'app.views.km.elements.traffic_counts.chart.categories.taxis' %>',
				            pickup_trucks: '<%= t 'app.views.km.elements.traffic_counts.chart.categories.pickup_trucks' %>',
				            articulated_trucks: '<%= t 'app.views.km.elements.traffic_counts.chart.categories.articulated_trucks' %>',
				            rigid_trucks: '<%= t 'app.views.km.elements.traffic_counts.chart.categories.rigid_trucks' %>',
				            vans: '<%= t 'app.views.km.elements.traffic_counts.chart.categories.vans' %>',
				            buses: '<%= t 'app.views.km.elements.traffic_counts.chart.categories.buses' %>',
				            bikes: '<%= t 'app.views.km.elements.traffic_counts.chart.categories.bikes' %>',
				            motorbikes: '<%= t 'app.views.km.elements.traffic_counts.chart.categories.motorbikes' %>',
				            pedestrians: '<%= t 'app.views.km.elements.traffic_counts.chart.categories.pedestrians' %>'
						}
					}
				},
				traffic_disruptions: {
					title: '<%= t 'app.views.km.elements.traffic_disruptions.title' %>',
					units: '<%= t 'app.views.km.elements.traffic_disruptions.units' %>',
					chart: {
						y_label: '<%= t 'app.views.km.elements.traffic_disruptions.chart.y_label' %>',
						categories: {
							deliveries: '<%= t 'app.views.km.elements.traffic_disruptions.chart.categories.deliveries' %>',
							disruptions: '<%= t 'app.views.km.elements.traffic_disruptions.chart.categories.disruptions' %>'
						}
					},
					fields: {
						source_name: '<%= t 'app.views.km.elements.traffic_disruptions.fields.source_name' %>',
						duration: '<%= t 'app.views.km.elements.traffic_disruptions.fields.duration' %>',
						vehicles_affected: '<%= t 'app.views.km.elements.traffic_disruptions.fields.vehicles_affected' %>',
						mins: '<%= t 'app.views.km.elements.traffic_disruptions.fields.mins' %>'
					}
				}
			}
		}
	},
	fmx: {
		parent: null,
		notification: function(){
			var opts = {};
			$.extend(opts, {
				
			});
			return opts;
		},
		sprite: function(){
			var opts = {};
			$.extend(opts, {
				
			});
			return opts;
		},
		fullscreen: function(){
			var opts = {};
			$.extend(opts, {
				
			});
			return opts;
		},
		view_loader: function(){
			var opts = {};
			$.extend(opts, {
				
			});
			return opts;
		},
		api_client: function(){
			var opts = {};
			$.extend(opts, {
				
			});
			return opts;
		},
		dropdown: function(){
			var opts = {};
			$.extend(opts, {
				labels: {
					not_found: '<%= t 'fmx.app.dropdown.labels.not_found' %>',
					error: '<%= t 'fmx.app.dropdown.labels.error' %>'
				}
			});
			return opts;
		},
		autocomplete: function(){
			var opts = {};
			$.extend(opts, {
				labels: {
					search: '<%= t 'fmx.app.autocomplete.labels.search' %>',
					error: '<%= t 'fmx.app.autocomplete.labels.error' %>',
					not_found: '<%= t 'fmx.app.autocomplete.labels.not_found' %>'
				}
			});
			return opts;
		}
	}
});
lang.init();