(function(){
	$(function(){
		var el = app.km.elements.loading = {};
		$.extend(el, {
			parent: app.km.elements,
			data_key: 'public_meter_length',
			second_data_key: 'dedicated_meter_length',
			init: function(){
				var base = this.parent.getElement('loading');
				$.extend(base, this);
				$.extend(this, base);
				this.initPanel();
				this.initChart();
				this.initMap();
			},
			initMap: function(){
				$.extend(this.map, {
					addMarker: function(opts){
						var marker = this.getMarker(opts);
						$.extend(marker, {
							initMarker: function(){
								var icons = this.map.config.icons;
								var icon = icons[this.parent.key];
								this.marker = new google.maps.Marker(
									$.extend({
										draggable: false,
										position: this.location,
										animation: google.maps.Animation.DROP,
										icon: icon
									}, this.marker_opts)
								);
							}
						});
						return marker;
					},
					addLayer: function(key, data, index){
						var layer = this.getLayer(key, data, index);
						$.extend(layer, {
							initColor: function(){
								var colors = this.element.map.config.colors;
								this.color = colors[this.key];
							}
						});
						layer.init();
					}
				});
			},
			initChart: function(){
				$.extend(this.chart, {
					render: function(){
						var _self = this;
						var series = [];
						var categories = [];
						var el = [];
						var public_data = {};
						var dedicated_data = {};
						var yAxis = {};
						$.extend(yAxis, {
							title: {
								text: this.element.lang.chart.y_label
							}
						});
						$.extend(public_data, {
							name: this.element.lang.chart.public_meter_length,
							data: []
						});
						$.extend(dedicated_data, {
							name: this.element.lang.chart.dedicated_meter_length,
							data: []
						});
						$.each(this.data, function(key, val){
							var category = '' + _self.element.lang.chart.category;
							category = category.replace('#{research_id}', val.research_id);
							categories.push(category);
							public_data.data.push(val.public_meter_length);
							dedicated_data.data.push(val.dedicated_meter_length);
						});
						$.extend(series, [public_data, dedicated_data]);
						this.wrapper.highcharts(
							$.extend({
								yAxis: yAxis,
								xAxis: {
									categories: categories
								},
								series: series
							}, this.chart_opts)
						);
					}
				});
			},
			initPanel: function(){
				$.extend(this.panel, {
					second_stat: null,
					init: function(){
						this.initContainer();
						this.initSecondStat();
						this.initSecondUnit();
					},
					update: function(){
						this.updateStat();
						this.updateSecondStat();
					},
					getStat: function(data){
						if(data == null) data = '-';
						else{
							var val = parseFloat(data);
							if(!isNaN(val) && isFinite(val)){
								data = val.toFixed(2);
								data = parseFloat(data);
							}
						}
						return data;
					},
					updateSecondStat: function(){
						var data = this.view.km[this.element.second_data_key];
						this.second_stat.html(this.getStat(data));
					},
					initSecondUnit: function(){
						var label = this.element.lang.second_units;
						var unit = $('<div class="km_panel_element_unit"></div>');
						unit.addClass('second');
						unit.html(label);
						unit.appendTo(this.container);
					},
					initSecondStat: function(){
						this.second_stat = $('<div class="km_panel_element_stat"></div>');
						this.second_stat.addClass('second');
						this.second_stat.html(100);
						this.second_stat.appendTo(this.container);
					},
					initContainer: function(){
						this.container.addClass('full');
						this.in
					},
					appendTo: function(panel){
						this.panel = panel;
						this.container.appendTo(this.panel.container);
						this.initSeparator();
					},
					initSeparator: function(){
						var separator = {};
						$.extend(separator, {
							parent: this,
							root: null,
							view: null,
							element: null,
							container: null,
							init: function(){
								this.initRoot();
								this.initView();
								this.initElement();
								this.initContainer();
							},
							initContainer: function(){
								this.container = $('<div class="km_panel_separator"></div>');
								this.initTitle();
								this.container.insertAfter(this.parent.container);
							},
							initTitle: function(){
								var label = this.element.lang.separator;
								var title = $('<h1 class="km_panel_separator_title"></h1>');
								title.html(label);
								title.appendTo(this.container);
							},
							initRoot: function(){
								this.root = this.parent.root;
							},
							initView: function(){
								this.view = this.parent.view;
							},
							initElement: function(){
								this.element = this.parent.element;
							}
						});
						separator.init();
					}
				});
				this.panel.init();
			}
		});
		el.init();
	});
})(jQuery);