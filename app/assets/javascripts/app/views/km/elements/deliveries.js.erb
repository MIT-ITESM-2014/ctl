(function(){
	$(function(){
		var el = app.km.elements.deliveries = {};
		$.extend(el, {
			parent: app.km.elements,
			data_key: 'peak_deliveries',
			init: function(){
				var base = this.parent.getElement('deliveries');
				$.extend(base, this);
				$.extend(this, base);
				this.initPanel();
				this.initChart();
				this.initMap();
			},
			initMap: function(){
				$.extend(this.map, {
					addMarker: function(opts){
						var marker = this.getMarker(opts);
						$.extend(marker, {
							initMarker: function(){
								var icons = this.map.config.icons;
								var icon = icons[this.parent.key];
								this.marker = new google.maps.Marker(
									$.extend({
										draggable: false,
										position: this.location,
										animation: google.maps.Animation.DROP,
										icon: icon
									}, this.marker_opts)
								);
							}
						});
						return marker;
					},
					addLayer: function(key, data, index){
						var layer = this.getLayer(key, data, index);
						$.extend(layer, {
							initColor: function(){
								var colors = this.element.map.config.colors;
								this.color = colors[this.key];
							}
						});
						layer.init();
					}
				});
			},
			initChart: function(){
				$.extend(this.chart, {
					render: function(){
						var _self = this;
						var categories = [];
						var series = [];
						$.each(this.data, function(key, val){
							categories.push(val.name);
							var el = [];
							$.each(val.chart_deliveries, function(c_key, c_val){
								el.push(_self.getDateVal(c_val.s_at, c_val.e_at));
							});
							series.push(el);
						});
						// TODO
						//console.log(series[0]);
						//console.log(categories);
						/**this.wrapper.highcharts(
							{
								chart: {
									type: 'columnrange',
									inverted: true
							    },
							    title: {
							        text: null
							    },
							    xAxis: {
							        //categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
									categories: ['Shop 1', 'Shop 2']
							    },
							    yAxis: {
							        type: 'datetime',
									dateTimeLabelFormats: {
					                    hour: '%H:%M'
					                }
							    },
							    tooltip: {
							        valueSuffix: 'Â°C'
							    },

							    legend: {
							        enabled: false
							    },

							    series: [{
							        name: 'Temperatures',
									pointStart: Date.UTC(2010, 0, 1),
									pointInterval: 3600 * 1000,
							        data: [
										10, 20, 30
									]
							    }]
							}
						);*/
						//console.log(series);
					},
					getDateVal: function(start, end){
						var res = [];
						var date = new Date(start);
						var mins = date.getMinutes() / 60;
						var diff = ((end - start) / (1000 * 3600));
						var hours = date.getHours() + mins;
						res.push(hours);
						res.push(diff);
						return res;
						//return date.getHours
					},
				});
			},
			initPanel: function(){
				$.extend(this.panel, {
					init: function(){
						this.initContainer();
					},
					appendTo: function(panel){
						this.panel = panel;
						this.panel.addColContainer(this.container);
					},
					initContainer: function(){
						this.container.addClass('small');
					}
				});
				this.panel.init();
			}
		});
		el.init();
	});
})(jQuery);