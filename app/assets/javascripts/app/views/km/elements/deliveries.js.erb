(function(){
	$(function(){
		var el = app.km.elements.deliveries = {};
		$.extend(el, {
			parent: app.km.elements,
			data_key: 'peak_deliveries',
			second_data_key: 's_peak_delivery_hour',
			init: function(){
				var base = this.parent.getElement('deliveries');
				$.extend(base, this);
				$.extend(this, base);
				this.initPanel();
				this.initChart();
				this.initMap();
			},
			initMap: function(){
				$.extend(this.map, {
					addContent: function(opts){
						var content = this.getContent(opts);
						$.extend(content, {
							initContent: function(){
								this.initDuration();
								this.addBaseElement('vehicle_type');
								this.addBaseElement('delivering_company');
								this.addBaseElement('duration');
								this.addContents();
							},
							initDuration: function(){
								var fields = this.lang.fields;
								var duration = (this.data.duration / 60);
								duration = duration.toFixed(2);
								duration = parseFloat(duration);
								this.data.duration = duration + ' ' + fields.mins;
							}
						});
						return content;
					},
					addMarker: function(opts){
						var marker = this.getMarker(opts);
						$.extend(marker, {
							initMarker: function(){
								var icons = this.map.config.icons.marker;
								var icon = icons[this.parent.key];
								this.marker = new google.maps.Marker(
									$.extend({
										draggable: false,
										position: this.location,
										animation: google.maps.Animation.DROP,
										icon: icon
									}, this.marker_opts)
								);
							}
						});
						return marker;
					},
					addLayer: function(key, data, index){
						var layer = this.getLayer(key, data, index);
						$.extend(layer, {
							initColor: function(){
								var colors = this.element.map.config.colors;
								this.color = colors[this.key];
							}
						});
						layer.init();
					}
				});
			},
			initChart: function(){
				$.extend(this.chart, {
					days: null,
					render: function(){
						var _self = this;
						var data = this.data;
						var days_categories = [];
						var categories = [];
						var series = [];
						var xAxis = {};
						var yAxis = {};
						var colors = this.getColors();
						var now = new Date();
						var utc = Date.UTC(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0);
						var offset = this.view.km.utc_offset;
						var base = {};
						var config = this.view.config.chart.charts[this.element.key];
						var days = this.days = config.days;
						$.extend(base, {
							utc: utc,
							offset: offset
						});
						$.each(days, function(key, day){
							days_categories.push(day.name);
						});
						$.each(data, function(i, el){
							var el_data = {};
							$.extend(el_data, {
								hour: el.hour_i
							}, base);
							var element = _self.getElement(el_data);
							categories.push(element);
							$.each(days, function(j, day){
								var row = {};
								var field_name = 'total_' + day.namespace;
								$.extend(row, {
									col: i,
									row: parseInt(j),
									y: el[field_name]
								});
								series.push(row);
							});
						});
						var max_x = 0;
						if(categories.length > 0) max_x = categories.length - 1;
						$.extend(xAxis, {
							categories: categories,
							min: 0,
							max: max_x,
							labels: $.extend({
								formatter: function(){
									return this.value.getLabel();
								}
							}, config.labels)
						});
						var max_y = 0;
						if(days_categories.length > 0) max_y = days_categories.length - 0.5;
						$.extend(yAxis, {
							categories: days_categories,
							min: -0.50,
							max: max_y,
							minPadding: 0,
							maxPadding: 0,
							startOnTick: false,
							endOnTick: false,
							title: {
								text: null
							}
						});
						this.wrapper.highcharts(
							$.extend({
								xAxis: xAxis,
								yAxis: yAxis,
								series: [{
									borderWidth: 0,
									data: series,
									valueRanges: colors
								}],
								tooltip: {
									formatter: function(){
										var x = categories[this.point.col];
										return x.getTooltip(this);
									}
								}
							}, this.chart_opts)
						);
					},
					getElement: function(data){
						var element = {};
						$.extend(element, {
							parent: this,
							data: data,
							hours: null,
							_label: null,
							init: function(){
								this.initHours();
							},
							getTooltip: function(obj){
								var label = this.getLabel();
								var days = this.parent.days;
								var day = days[obj.point.row];
								return day.name + ' (' + label + ')<br /><b>' + obj.y + '</b> deliveries';
							},
							getLabel: function(){
								if(this._label == null){
									this._label = this.hours.start + ':00 - ' + this.hours.end + ':00';
								}
								return this._label;
							},
							initHours: function(){
								var _self = this;
								var start = new Date(this.data.utc);
								start.setHours(this.data.hour);
								start.setSeconds(this.data.offset);
								var end = new Date(start.getTime());
								end.setHours(end.getHours() + 1);
								this.hours = {};
								$.extend(this.hours, {
									start: start.getHours(),
									end: end.getHours()
								});
								$.each(this.hours, function(key, val){
									if(val < 10) _self.hours[key] = ("0" + val);
								});
							}
						});
						element.init();
						return element;
					},
					getColors: function(){
						var data = []; 
						var config = this.view.config.chart.charts[this.element.key];
						var colors = config.colors;
						var max = this.view.km.max_deliveries;
						var increment = Math.floor(max / colors.length);
						var i = 0;
						data.push({ to: 0, color: config.no_data });
						$.each(colors, function(key, color){
							++i;
							var from = i;
							i += (increment);
							var to = i;
							if(to > max) to = max;
							var el = {};
							$.extend(el, {
								from: from,
								to: to,
								color: color
							});
							data.push(el);
						});
						return data;
					}
				});
			},
			initPanel: function(){
				$.extend(this.panel, {
				  second_stat: null,
					init: function(){
						this.initContainer();
						this.initSecondStat();
						this.initSecondUnit();
					},
					initSecondStat: function(){
						this.second_stat = $('<div class="km_panel_element_stat"></div>');
						this.second_stat.addClass('second');
						this.second_stat.html(100);
						this.second_stat.appendTo(this.container);
					},
					updateSecondStat: function(){
						var data = this.view.km[this.element.second_data_key];
						this.second_stat.html(data);
					},
					initSecondUnit: function(){
						var label = this.element.lang.second_units;
						var unit = $('<div class="km_panel_element_unit"></div>');
						unit.addClass('second');
						unit.html(label);
						unit.appendTo(this.container);
					},
					appendTo: function(panel){
						this.panel = panel;
						this.panel.addColContainer(this.container);
					},
					initContainer: function(){
						this.container.addClass('small');
					},
					update: function(){
					  this.updateStat();
					  this.updateSecondStat();
				  }
				});
				this.panel.init();
			}
		});
		el.init();
	});
})(jQuery);
