(function(){
	$(function(){
		var el = app.km.elements.deliveries = {};
		$.extend(el, {
			parent: app.km.elements,
			data_key: 'peak_deliveries',
			init: function(){
				var base = this.parent.getElement('deliveries');
				$.extend(base, this);
				$.extend(this, base);
				this.initPanel();
				this.initChart();
				this.initMap();
			},
			initMap: function(){
				$.extend(this.map, {
					addContent: function(opts){
						var content = this.getContent(opts);
						$.extend(content, {
							initContent: function(){
								this.initDuration();
								this.addBaseElement('vehicle_type');
								this.addBaseElement('delivering_company');
								this.addBaseElement('duration');
								this.addContents();
							},
							initDuration: function(){
								var fields = this.lang.fields;
								var duration = (this.data.duration / 60);
								duration = duration.toFixed(2);
								duration = parseFloat(duration);
								this.data.duration = duration + ' ' + fields.mins;
							}
						});
						return content;
					},
					addMarker: function(opts){
						var marker = this.getMarker(opts);
						$.extend(marker, {
							initMarker: function(){
								var icons = this.map.config.icons.marker;
								var icon = icons[this.parent.key];
								this.marker = new google.maps.Marker(
									$.extend({
										draggable: false,
										position: this.location,
										animation: google.maps.Animation.DROP,
										icon: icon
									}, this.marker_opts)
								);
							}
						});
						return marker;
					},
					addLayer: function(key, data, index){
						var layer = this.getLayer(key, data, index);
						$.extend(layer, {
							initColor: function(){
								var colors = this.element.map.config.colors;
								this.color = colors[this.key];
							}
						});
						layer.init();
					}
				});
			},
			initChart: function(){
				$.extend(this.chart, {
					start_time: null,
					start_utc: null,
					start: null,
					render: function(){
						var _self = this;
						var categories = [];
						var data = [];
						var lang = this.element.lang.chart;
						this.initStartTime();
						var elements = this.data.elements;
						$.each(elements, function(key, val){
							categories.push(val.shop_name);
							var el = _self.getElement(val);
							data.push(el.getData());
						});
						this.wrapper.highcharts(
							$.extend({
								yAxis: {
									title: {
										text: lang.y_label
									},
									tickInterval: 1,
									min: 0,
									labels: {
										formatter: function(){
											return _self.getHourFormat(this.value);
										}
									}
								},
								tooltip: {
									formatter: function(){
										return _self.getTooltip(this);
									}
								},
								xAxis: {
									categories: categories
								},
								series: [{
									data: data
								}]
							}, this.chart_opts)
						);
					},
					getTooltip: function(obj){
						var duration = Math.abs(obj.point.high - obj.point.low);
						return obj.key + '<br /><b>Delivery Time: </b>' + this.getLocalTime(obj.point.low) + ' - ' + this.getLocalTime(obj.point.high) + '<br /><b>Duration: </b>' + this.getDuration(duration) + ' mins';
					},
					getDuration: function(hours){
						var val = (hours * 60).toFixed(2);
						return parseFloat(val);
					},
					getLocalTime: function(val){
						var date = new Date(this.start);
						var hour = Math.floor(val);
						var mins = Math.round((val - hour) * 60);
						date.setHours(date.getHours() + hour);
						hour = date.getHours();
						if(hour < 10) hour = ("0" + hour);
						if(mins < 10) mins = ("0" + mins);
						return hour + ':' + mins;
					},
					getHourFormat: function(hour){
						var date = new Date(this.start);
						date.setHours(date.getHours() + hour);
						var start_hour = date.getHours();
						date.setHours(date.getHours() + 1);
						var end_hour = date.getHours();
						return start_hour + ':00 - ' + end_hour + ':00';
					},
					initStartTime: function(){
						this.start_time = new Date(this.data.starts_at);
						this.start_utc = this.start_time.getUTCHours();
						var offset = this.view.km.utc_offset;
						var now = new Date();
						var utc = Date.UTC(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0);
						var date = new Date(utc);
						date.setHours(this.start_time.getUTCHours());
						date.setSeconds(offset);
						this.start = date;
					},
					getElement: function(data){
						var element = {};
						$.extend(element, {
							parent: this,
							data: data,
							start: null,
							end: null,
							init: function(){
								this.initData();
							},
							initData: function(){
								this.initStart();
								this.initEnd();
							},
							initEnd: function(){
								var duration = (this.data.duration / 3600);
								this.end = this.start + duration;
							},
							getData: function(){
								return [this.start, this.end];
							},
							initStart: function(){
								var start = new Date(this.data.s_at);
								var hour = start.getUTCHours();
								var mins = start.getMinutes();
								this.start = Math.abs(hour - this.parent.start_utc) + (mins / 60);
							}
						});
						element.init();
						return element;
					}
				});
			},
			initPanel: function(){
				$.extend(this.panel, {
					init: function(){
						this.initContainer();
					},
					appendTo: function(panel){
						this.panel = panel;
						this.panel.addColContainer(this.container);
					},
					initContainer: function(){
						this.container.addClass('small');
					}
				});
				this.panel.init();
			}
		});
		el.init();
	});
})(jQuery);